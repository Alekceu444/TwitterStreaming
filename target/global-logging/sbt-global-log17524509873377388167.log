[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\apismerov\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\apismerov\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.6 (Oracle Corporation Java 15.0.1)
[debug]       Load.loadUnit: plugins took 59.9356ms
[debug]       Load.loadUnit: defsScala took 0.2197ms
[debug] [Loading] Scanning directory C:\Users\apismerov\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\apismerov\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.2001 ms
[debug]           Load.resolveProject(global-plugins) took 35.5509ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\apismerov\.sbt\1.0\plugins, plugins: List(<none>))) took 66.4221ms
[debug] [Loading] Done in C:\Users\apismerov\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 81.7532ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1824ms
[debug]     Load.loadUnit(file:/C:/Users/apismerov/.sbt/1.0/plugins/, ...) took 149.2263ms
[debug]   Load.apply: load took 259.7011ms
[debug]   Load.apply: resolveProjects took 4.7989ms
[debug]   Load.apply: finalTransforms took 39.3552ms
[debug]   Load.apply: config.delegates took 5.6298ms
[debug]   Load.apply: Def.make(settings)... took 641.3568ms
[debug]   Load.apply: structureIndex took 63.2331ms
[debug]   Load.apply: mkStreams took 4.8574ms
[info] loading global plugins from C:\Users\apismerov\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3930.6885ms
[debug]           Load.loadUnit: plugins took 18.7839ms
[debug]           Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\apismerov\Desktop\Twitter\project
[debug]             Load.loadUnit: mkEval took 3.8824ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\apismerov\Desktop\Twitter\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1551 ms
[info] loading settings for project twitter-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(twitter-build) took 8.5559ms
[debug]             Load.loadTransitive: finalizeProject(Project(id twitter-build, base: C:\Users\apismerov\Desktop\Twitter\project, plugins: List(<none>))) took 10.1153ms
[debug] [Loading] Done in C:\Users\apismerov\Desktop\Twitter\project, returning: (twitter-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1390.6328ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.3156ms
[debug]         Load.loadUnit(file:/C:/Users/apismerov/Desktop/Twitter/project/, ...) took 1416.4025ms
[debug]       Load.apply: load took 1417.6329ms
[debug]       Load.apply: resolveProjects took 0.0856ms
[debug]       Load.apply: finalTransforms took 7.2491ms
[debug]       Load.apply: config.delegates took 0.2533ms
[debug]       Load.apply: Def.make(settings)... took 66.6877ms
[debug]       Load.apply: structureIndex took 20.308ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from C:\Users\apismerov\Desktop\Twitter\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1922.9794ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\apismerov\Desktop\Twitter
[debug]       Load.loadUnit: mkEval took 0.2148ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\apismerov\Desktop\Twitter, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.2342 ms
[info] loading settings for project twitter from build.sbt ...
[debug]         Load.resolveProject(twitter) took 18.6591ms
[debug]       Load.loadTransitive: finalizeProject(Project(id twitter, base: C:\Users\apismerov\Desktop\Twitter, plugins: List(<none>))) took 20.6644ms
[debug] [Loading] Done in C:\Users\apismerov\Desktop\Twitter, returning: (twitter)
[debug]     Load.loadUnit: loadedProjectsRaw took 950.8038ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.6422ms
[debug]   Load.loadUnit(file:/C:/Users/apismerov/Desktop/Twitter/, ...) took 2893.1257ms
[debug] Load.apply: load took 2894.7963ms
[debug] Load.apply: resolveProjects took 0.1242ms
[debug] Load.apply: finalTransforms took 16.2846ms
[debug] Load.apply: config.delegates took 0.2342ms
[debug] Load.apply: Def.make(settings)... took 57.6248ms
[debug] Load.apply: structureIndex took 18.5534ms
[debug] Load.apply: mkStreams took 0.0017ms
[info] set current project to Twitter (in build file:/C:/Users/apismerov/Desktop/Twitter/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * twitter / idePackagePrefix
[warn]   +- C:\Users\apismerov\Desktop\Twitter\build.sbt:7
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64979 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64979, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Twitter (in build file:/C:/Users/apismerov/Desktop/Twitter/)
[debug] > Exec(idea-shell, None, None)
